{"GetMatch":{"name":"GetMatch","type":"function","returns":"MatchData*","doc":"MatchData* **GetMatch**() \n\n\r\n     \r\n      \n**Brief:**   Gets the current match.\r\n     \r\n      \n**Returns:**   Match\r\n     "},"GetDeck":{"name":"GetDeck","type":"function","returns":"ptl::vector<unsigned int>*","doc":"ptl::vector<unsigned int>* **GetDeck**(int) \n\n\r\n      \n**Brief:**   Gets deck from array index is number in array.\r\n     \r\n      \n**Returns:**   Deck\r\n     "},"GetHand":{"name":"GetHand","type":"function","returns":"tbsg::Card*>*\r\n     */\r\n    std::function<ptl::vector<unsigned int>*","doc":"tbsg::Card*>*\r\n     */\r\n    std::function<ptl::vector<unsigned int>* **GetHand**(int) \n\n\r\n      \n**Brief:**   Gets hand by index.\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - player you want to use.\r\n     \r\n      \n**Returns:**   ptl::vector<tbsg::Card>\r\n     "},"GetRival":{"name":"GetRival","type":"function","returns":"tbsg::Hero*","doc":"tbsg::Hero* **GetRival**() \n\n\r\n     \n**Brief:**   Gets the rivalHero of the game.\r\n    \r\n     \n**Returns:**   tbsg::Hero\r\n    "},"GetHero":{"name":"GetHero","type":"function","returns":"tbsg::Hero*","doc":"tbsg::Hero* **GetHero**() \n\n\r\n      \n**Brief:**   Gets the playerHero of the game.\r\n     \r\n      \n**Returns:**   tbsg::Hero\r\n     "},"GetHeroByID":{"name":"GetHeroByID","type":"function","returns":"tbsg::Hero*","doc":"tbsg::Hero* **GetHeroByID**(int) \n\n\r\n     \n**Brief:**   Gets the Hero of the game by index.\r\n    \r\n     \n\n**Parameters:**\r\n      \r\n      - the ID of the hero you want to get\r\n    \r\n     \n**Returns:**   tbsg::Hero\r\n    "},"AreHeroesAtBoss":{"name":"AreHeroesAtBoss","type":"function","returns":"bool","doc":"bool **AreHeroesAtBoss**() \n\n\r\n     \n**Brief:**   Returns true when you are at the boss\r\n    \r\n     \n**Returns:**   boolean\r\n    "},"AreHeroesAtEndFight":{"name":"AreHeroesAtEndFight","type":"function","returns":"bool","doc":"bool **AreHeroesAtEndFight**() \n\n\r\n     \n**Brief:**   Returns true when you are at the end fight\r\n    \r\n     \n**Returns:**   boolean\r\n    "},"PlayerFightDuration":{"name":"PlayerFightDuration","type":"function","returns":"int","doc":"int **PlayerFightDuration**() \n\n\r\n     \n**Brief:**   Gets the number of turns the player is in combat with the monster. Resets if it kill it and goes to the next.\r\n    \r\n     \n**Returns:**   int\r\n    "},"SetFirstPlayerFlag":{"name":"SetFirstPlayerFlag","type":"function","returns":"void","doc":"void **SetFirstPlayerFlag**(int) \n\n\r\n     \n**Brief:**   Sets the first player tag.\r\n    \r\n     \n\n**Parameters:**\r\n      \r\n      - player you want to Set the tag to\r\n    \r\n     \n**Returns:**   void\r\n    "},"SwitcheFirstPlayerFlag":{"name":"SwitcheFirstPlayerFlag","type":"function","returns":"void","doc":"void **SwitcheFirstPlayerFlag**() \n\n\r\n     \n**Brief:**   Switches the first player tag.\r\n    \r\n     \n**Returns:**   void\r\n    "},"GetHeroResource":{"name":"GetHeroResource","type":"function","returns":"int","doc":"int **GetHeroResource**(Hero*) \n\n\r\n  \n**Brief:**   Gets resource of a hero.\r\n \r\n  \n\n**Parameters:**\r\n      \r\n      - Hero you want to use.\r\n \r\n  \n**Returns:**   int\r\n "},"AddHeroResource":{"name":"AddHeroResource","type":"function","returns":"void","doc":"void **AddHeroResource**(Hero*, int) \n\n\r\n      \n**Brief:**   Add resources to a hero.\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - Hero you want to use.\r\n     \r\n      - Amount of resource you want to add to the hero.\r\n     \r\n      \n**Returns:**   void\r\n     "},"SetHeroResource":{"name":"SetHeroResource","type":"function","returns":"void","doc":"void **SetHeroResource**(Hero*, int) \n\n\r\n      \n**Brief:**   Sets the resources of a hero.\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - Hero you want to use.\r\n     \r\n      - New amount of resource.\r\n     \r\n      \n**Returns:**   void\r\n     "},"StealHeroResource":{"name":"StealHeroResource","type":"function","returns":"void","doc":"void **StealHeroResource**(Hero*, Hero*, int) \n\n\r\n      \n**Brief:**   Steals resources from one hero and gives it to another hero.\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - Hero you want to steal it from.\r\n     \r\n      - Hero that gets the resources.\r\n     \r\n      - Amount of resources you want to steal.\r\n     \r\n      \n**Returns:**   void\r\n     "},"GetHeroHealth":{"name":"GetHeroHealth","type":"function","returns":"int","doc":"int **GetHeroHealth**(Hero*) \n\n\r\n      \n**Brief:**   Gets health of a hero.\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - Hero you want to use.\r\n     \r\n      \n**Returns:**   int\r\n     "},"AddHeroHealth":{"name":"AddHeroHealth","type":"function","returns":"void","doc":"void **AddHeroHealth**(Hero*, int) \n\n\r\n      \n**Brief:**   Add health to a hero.\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - Hero you want to use.\r\n     \r\n      - Amount of health you want to add to the hero.\r\n     \r\n      \n**Returns:**   void\r\n     "},"SetHeroHealth":{"name":"SetHeroHealth","type":"function","returns":"void","doc":"void **SetHeroHealth**(Hero*, int) \n\n\r\n      \n**Brief:**   Sets the health of a hero.\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - Hero you want to use.\r\n     \r\n      - New amount of health.\r\n     \r\n      \n**Returns:**   void\r\n     "},"StealHeroHealth":{"name":"StealHeroHealth","type":"function","returns":"void","doc":"void **StealHeroHealth**(Hero*, Hero*, int) \n\n\r\n      \n**Brief:**   Steals health from one hero and gives it to another hero.\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - Hero you want to steal it from.\r\n     \r\n      - Hero that gets the health.\r\n     \r\n      - Amount of health you want to steal.\r\n     \r\n      \n**Returns:**   void\r\n     "},"GetHeroArmor":{"name":"GetHeroArmor","type":"function","returns":"int","doc":"int **GetHeroArmor**(Hero*) \n\n\r\n      \n**Brief:**   Gets armor of a hero.\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - Hero you want to use.\r\n     \r\n      \n**Returns:**   int\r\n     "},"AddHeroArmor":{"name":"AddHeroArmor","type":"function","returns":"void","doc":"void **AddHeroArmor**(Hero*, int) \n\n\r\n      \n**Brief:**   Add armor to a hero.\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - Hero you want to use.\r\n     \r\n      - Amount of armor you want to add to the hero.\r\n     \r\n      \n**Returns:**   void\r\n     "},"SetHeroArmor":{"name":"SetHeroArmor","type":"function","returns":"void","doc":"void **SetHeroArmor**(Hero*, int) \n\n\r\n      \n**Brief:**   Sets the armor of a hero.\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - Hero you want to use.\r\n     \r\n      - New amount of armor.\r\n     \r\n      \n**Returns:**   void\r\n     "},"StealHeroArmor":{"name":"StealHeroArmor","type":"function","returns":"void","doc":"void **StealHeroArmor**(Hero*, Hero*, int) \n\n\r\n      \n**Brief:**   Steals armor from one hero and gives it to another hero.\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - Hero you want to steal it from.\r\n     \r\n      - Hero that gets the armor.\r\n     \r\n      - Amount of armor you want to steal.\r\n     \r\n      \n**Returns:**   void\r\n     "},"GetHeroAttack":{"name":"GetHeroAttack","type":"function","returns":"int","doc":"int **GetHeroAttack**(Hero*) \n\n\r\n      \n**Brief:**   Gets attack of a hero.\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - Hero you want to use.\r\n     \r\n      \n**Returns:**   int\r\n     "},"AddHeroAttack":{"name":"AddHeroAttack","type":"function","returns":"void","doc":"void **AddHeroAttack**(Hero*, int) \n\n\r\n      \n**Brief:**   Add attack to a hero.\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - Hero you want to use.\r\n     \r\n      - Amount of attack you want to add to the hero.\r\n     \r\n      \n**Returns:**   void\r\n     "},"SetHeroAttack":{"name":"SetHeroAttack","type":"function","returns":"void","doc":"void **SetHeroAttack**(Hero*, int) \n\n\r\n      \n**Brief:**   Sets the attack of a hero.\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - Hero you want to use.\r\n     \r\n      - New amount of attack.\r\n     \r\n      \n**Returns:**   void\r\n     "},"StealHeroAttack":{"name":"StealHeroAttack","type":"function","returns":"void","doc":"void **StealHeroAttack**(Hero*, Hero*, int) \n\n\r\n      \n**Brief:**   Steals attack from one hero and gives it to another hero.\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - Hero you want to steal it from.\r\n     \r\n      - Hero that gets the attack.\r\n     \r\n      - Amount of attack you want to steal.\r\n     \r\n      \n**Returns:**   void\r\n     "},"GetHeroTotalAttack":{"name":"GetHeroTotalAttack","type":"function","returns":"int","doc":"int **GetHeroTotalAttack**(Hero*) \n\n\r\n      \n**Brief:**   Gets the total attack of a hero.\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - Hero you want to use.\r\n     \r\n      \n**Returns:**   int\r\n     "},"GetHeroWeapon":{"name":"GetHeroWeapon","type":"function","returns":"Weapon*","doc":"Weapon* **GetHeroWeapon**(Hero*) \n\n\r\n      \n**Brief:**   Gets weapon of a hero.\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - Hero you want to use.\r\n     \r\n      \n**Returns:**   Weapon\r\n     "},"SetHeroWeapon":{"name":"SetHeroWeapon","type":"function","returns":"void","doc":"void **SetHeroWeapon**(Hero*, Weapon*) \n\n\r\n      \n**Brief:**   Sets the weapon of a hero.\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - Hero you want to use.\r\n     \r\n      - New weapon of hero.\r\n     \r\n      \n**Returns:**   void\r\n     "},"StealHeroWeapon":{"name":"StealHeroWeapon","type":"function","returns":"void","doc":"void **StealHeroWeapon**(Hero*, Hero*) \n\n\r\n      \n**Brief:**   Steals the weapon from one hero and gives it to another hero.\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - Hero you want to steal it from.\r\n     \r\n      - Hero that gets the weapon.\r\n     \r\n      \n**Returns:**   void\r\n     "},"CreateHeroWeapon":{"name":"CreateHeroWeapon","type":"function","returns":"Weapon*","doc":"Weapon* **CreateHeroWeapon**(int, int) \n\n\r\n      \n**Brief:**   Creates a weapon and returns it.\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - Attack of the weapon.\r\n     \r\n      - durability of the weapon.\r\n     \r\n      \n**Returns:**   Weapon\r\n     "},"GetWeaponAttack":{"name":"GetWeaponAttack","type":"function","returns":"int","doc":"int **GetWeaponAttack**(Hero*) \n\n\r\n      \n**Brief:**   Gets attack of a weapon.\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - Hero you want to use.\r\n     \r\n      \n**Returns:**   int\r\n     "},"AddWeaponAttack":{"name":"AddWeaponAttack","type":"function","returns":"void","doc":"void **AddWeaponAttack**(Hero*, int) \n\n\r\n      \n**Brief:**   Add attack to a weapon.\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - Hero you want to use.\r\n     \r\n      - Amount of attack you want to add to the weapon.\r\n     \r\n      \n**Returns:**   void\r\n     "},"SetWeaponAttack":{"name":"SetWeaponAttack","type":"function","returns":"void","doc":"void **SetWeaponAttack**(Hero*, int) \n\n\r\n      \n**Brief:**   Sets the attack of a weapon.\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - Hero you want to use.\r\n     \r\n      - New amount of attack.\r\n     \r\n      \n**Returns:**   void\r\n     "},"GetWeaponDurability":{"name":"GetWeaponDurability","type":"function","returns":"int","doc":"int **GetWeaponDurability**(Hero*) \n\n\r\n      \n**Brief:**   Gets durability of a weapon.\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - Hero you want to use.\r\n     \r\n      \n**Returns:**   int\r\n     "},"AddWeaponDurability":{"name":"AddWeaponDurability","type":"function","returns":"void","doc":"void **AddWeaponDurability**(Hero*, int) \n\n\r\n      \n**Brief:**   Add durability to a weapon.\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - Hero you want to use.\r\n     \r\n      - Amount of durability you want to add to the weapon.\r\n     \r\n      \n**Returns:**   void\r\n     "},"SetWeaponDurability":{"name":"SetWeaponDurability","type":"function","returns":"void","doc":"void **SetWeaponDurability**(Hero*, int) \n\n\r\n      \n**Brief:**   Sets the durability of a weapon.\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - Hero you want to use.\r\n     \r\n      - New amount of durability.\r\n     \r\n      \n**Returns:**   void\r\n     "},"GetCurrentMonster":{"name":"GetCurrentMonster","type":"function","returns":"tbsg::MonsterCard*","doc":"tbsg::MonsterCard* **GetCurrentMonster**() \n\n\r\n     \n**Brief:**   Gets the monster you are currently facing\r\n    \r\n     \n**Returns:**   tbsg::Hero\r\n    "},"GetPlayedCard":{"name":"GetPlayedCard","type":"function","returns":"Card*","doc":"Card* **GetPlayedCard**(int) \n\n\r\n     \n**Brief:**   Gets the played card by player and index.\r\n    \r\n     \n\n**Parameters:**\r\n      \r\n      - player you want to get the played cards from.\r\n    \r\n     - number of the card you want to check.\r\n    \r\n     \n**Returns:**   Card\r\n    "},"GetCardFromHand":{"name":"GetCardFromHand","type":"function","returns":"const Card*","doc":"const Card* **GetCardFromHand**(int, int) \n\n\r\n     \n**Brief:**   Gets a card from hand.\r\n    \r\n     \n\n**Parameters:**\r\n      \r\n      - player you want to use.\r\n    \r\n     - index of the card you want to get.\r\n    \r\n     \n**Returns:**   Card\r\n    "},"GetHandSize":{"name":"GetHandSize","type":"function","returns":"int","doc":"int **GetHandSize**(int) \n\n\r\n     \n**Brief:**   Gets the amount of cards you have in your hand.\r\n    \r\n     \n\n**Parameters:**\r\n      \r\n      - player you want to use.\r\n    \r\n     \n**Returns:**   int\r\n    "},"GetDeckSize":{"name":"GetDeckSize","type":"function","returns":"int","doc":"int **GetDeckSize**(int) \n\n\r\n     \n**Brief:**   Gets the amount of cards you have in your hand.\r\n    \r\n     \n\n**Parameters:**\r\n      \r\n      - player you want to use.\r\n    \r\n     \n**Returns:**   int\r\n    "},"GetDiscardSize":{"name":"GetDiscardSize","type":"function","returns":"int","doc":"int **GetDiscardSize**(int) \n\n\r\n     \n**Brief:**   Gets the amount of cards you have in your hand.\r\n    \r\n     \n\n**Parameters:**\r\n      \r\n      - player you want to use.\r\n    \r\n     \n**Returns:**   int\r\n    "},"GetCardInHandByName":{"name":"GetCardInHandByName","type":"function","returns":"int","doc":"int **GetCardInHandByName**(int, string) \n\n\r\n      \n**Brief:**   Gets the cardIndex of a card in your hand by name.\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - player you want to use.\r\n     \r\n      - name of the card.\r\n     \r\n      \n**Returns:**   int\r\n     "},"GetAmountOfCardsInHandByName":{"name":"GetAmountOfCardsInHandByName","type":"function","returns":"int","doc":"int **GetAmountOfCardsInHandByName**(int, string) \n\n\r\n      \n**Brief:**   Gets the amount of cards you have in your hand by name.\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - player you want to use.\r\n     \r\n      - name of the card.\r\n     \r\n      \n**Returns:**   int\r\n     "},"GetCurrentplayerID":{"name":"GetCurrentplayerID","type":"function","returns":"int","doc":"int **GetCurrentplayerID**() \n\n\r\n      \n**Brief:**   Gets the current playerID.\r\n     \r\n      \n**Returns:**   int\r\n     "},"GetCurrentRivalID":{"name":"GetCurrentRivalID","type":"function","returns":"int","doc":"int **GetCurrentRivalID**() \n\n\r\n      \n**Brief:**   Gets the current rivalID.\r\n     \r\n      \n**Returns:**   int\r\n     "},"AddCardToDeckByType":{"name":"AddCardToDeckByType","type":"function","returns":"void","doc":"void **AddCardToDeckByType**(int, string) \n\n\r\n     \n**Brief:**   Adds a card with a specific card type to the player hand.\r\n    \r\n     \n\n**Parameters:**\r\n      \r\n      - player you want to use.\r\n    \r\n     - Type of the card.\r\n    \r\n     \n**Returns:**   void\r\n    "},"AddCardToHandByType":{"name":"AddCardToHandByType","type":"function","returns":"void","doc":"void **AddCardToHandByType**(int, string) \n\n\r\n      \n**Brief:**   Adds a card with a specific card type to the player hand.\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - player you want to use.\r\n     \r\n      - Type of the card.\r\n     \r\n      \n**Returns:**   void\r\n     "},"s not supported anymore\r\n    //std::function<void(int, ptl::string)> AddCardToHand":{"name":"s not supported anymore\r\n    //std::function<void(int, ptl::string)> AddCardToHand","type":"function","returns":"() is not supported anymore\r\n    //std::function<","doc":"() is not supported anymore\r\n    //std::function< **s not supported anymore\r\n    //std::function<void(int, ptl::string)> AddCardToHand**() \n\n\r\n      \n**Brief:**   Adds a card to hand by player.\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - player you want to use.\r\n     \r\n      - name of the card.\r\n     \r\n      \n**Returns:**   void\r\n     "},"s not supported anymore\r\n    //std::function<void(int, ptl::string, int)> AddCardsToHand":{"name":"s not supported anymore\r\n    //std::function<void(int, ptl::string, int)> AddCardsToHand","type":"function","returns":"() is not supported anymore\r\n    //std::function<","doc":"() is not supported anymore\r\n    //std::function< **s not supported anymore\r\n    //std::function<void(int, ptl::string, int)> AddCardsToHand**() \n\n\r\n      \n**Brief:**   Adds an amount of cards to hand.\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - player you want to use.\r\n     \r\n      - name of the card.\r\n     \r\n      - amount of cards you want to add\r\n     \r\n      \n**Returns:**   void\r\n     "},"RemoveCardFromHand":{"name":"RemoveCardFromHand","type":"function","returns":"void","doc":"void **RemoveCardFromHand**(int, int) \n\n\r\n      \n**Brief:**   Removes a card from hand by index.\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - player you want to use.\r\n     \r\n      - index of the card you want to remove.\r\n     \r\n      \n**Returns:**   void\r\n     "},"RemoveAllCardsFromHand":{"name":"RemoveAllCardsFromHand","type":"function","returns":"void","doc":"void **RemoveAllCardsFromHand**(int) \n\n\r\n     \n**Brief:**   Removes all card from a player.\r\n    \r\n     \n\n**Parameters:**\r\n      \r\n      - player you want to use.\r\n    \r\n     \n**Returns:**   void\r\n    "},"RemoveCardFromHandByName":{"name":"RemoveCardFromHandByName","type":"function","returns":"void","doc":"void **RemoveCardFromHandByName**(int, string) \n\n\r\n      \n**Brief:**   Removes a card from hand by name.\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - player you want to use.\r\n     \r\n      - name of the card.\r\n     \r\n      \n**Returns:**   void\r\n     "},"RemoveCardsFromHandByName":{"name":"RemoveCardsFromHandByName","type":"function","returns":"void","doc":"void **RemoveCardsFromHandByName**(int, string, int) \n\n\r\n     \n**Brief:**   Removes all card from hand by name.\r\n    \r\n     \n\n**Parameters:**\r\n      \r\n      - player you want to use.\r\n    \r\n     - name of the card.\r\n    \r\n     \n**Returns:**   void\r\n    "},"RemoveRandomCardFromHandByName":{"name":"RemoveRandomCardFromHandByName","type":"function","returns":"void","doc":"void **RemoveRandomCardFromHandByName**(int, string) \n\n\r\n     \n**Brief:**   Removes a random card from hand by name.\r\n    \r\n     \n\n**Parameters:**\r\n      \r\n      - player you want to use.\r\n    \r\n     - name of the card.\r\n    \r\n     \n**Returns:**   void\r\n    "},"GetDeckCard":{"name":"GetDeckCard","type":"function","returns":"Card*","doc":"Card* **GetDeckCard**(int, int) \n\n\r\n      \n**Brief:**   Gets a card from deck by index.\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - player you want to use.\r\n     \r\n      - index of the card you want to get.\r\n     \r\n      \n**Returns:**   Card\r\n     "},"GetCardInDeckByName":{"name":"GetCardInDeckByName","type":"function","returns":"Card*","doc":"Card* **GetCardInDeckByName**(int, string) \n\n\r\n      \n**Brief:**   Gets a card from deck by name\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - player you want to use.\r\n     \r\n      - name of the card.\r\n     \r\n      \n**Returns:**   int\r\n     "},"s not supported anymore\r\n    //std::function<void(int, ptl::string)> AddCardToDeck":{"name":"s not supported anymore\r\n    //std::function<void(int, ptl::string)> AddCardToDeck","type":"function","returns":"() is not supported anymore\r\n    //std::function<","doc":"() is not supported anymore\r\n    //std::function< **s not supported anymore\r\n    //std::function<void(int, ptl::string)> AddCardToDeck**() \n\n\r\n      \n**Brief:**   Adds a card to the deck\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - player you want to use.\r\n     \r\n      - name of the card.\r\n     \r\n      \n**Returns:**   void\r\n     "},"s not supported anymore\r\n    //std::function<void(int, ptl::string, int)> AddCardsToDeck":{"name":"s not supported anymore\r\n    //std::function<void(int, ptl::string, int)> AddCardsToDeck","type":"function","returns":"() is not supported anymore\r\n    //std::function<","doc":"() is not supported anymore\r\n    //std::function< **s not supported anymore\r\n    //std::function<void(int, ptl::string, int)> AddCardsToDeck**() \n\n\r\n      \n**Brief:**   Adds a card to the deck by name.\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - player you want to use.\r\n     \r\n      - name of the card.\r\n     \r\n      - amount of cards you want to add.\r\n     \r\n      \n**Returns:**   void\r\n     "},"RemoveRandomCardFromDeck":{"name":"RemoveRandomCardFromDeck","type":"function","returns":"void","doc":"void **RemoveRandomCardFromDeck**(int) \n\n\r\n     \n**Brief:**   Removes random card from deck.\r\n    \r\n     \n\n**Parameters:**\r\n      \r\n      - player you want to use.\r\n    \r\n     \n**Returns:**   void\r\n    "},"RemoveRandomCardsFromDeck":{"name":"RemoveRandomCardsFromDeck","type":"function","returns":"void","doc":"void **RemoveRandomCardsFromDeck**(int, int) \n\n\r\n     \n**Brief:**   Remove random cards from deck.\r\n    \r\n     \n\n**Parameters:**\r\n      \r\n      - player you want to use.\r\n    \r\n     - amount of cards you want to remove.\r\n    \r\n     \n**Returns:**   void\r\n    "},"RemoveRandomCardFromHand":{"name":"RemoveRandomCardFromHand","type":"function","returns":"void","doc":"void **RemoveRandomCardFromHand**(int) \n\n\r\n     \n**Brief:**   Remove random card from hand.\r\n    \r\n     \n\n**Parameters:**\r\n      \r\n      - player you want to use.\r\n    \r\n     \n**Returns:**   void\r\n    "},"RemoveRandomCardsFromHand":{"name":"RemoveRandomCardsFromHand","type":"function","returns":"void","doc":"void **RemoveRandomCardsFromHand**(int, int) \n\n\r\n     \n**Brief:**   Remove random cards from hand.\r\n    \r\n     \n\n**Parameters:**\r\n      \r\n      - player you want to use.\r\n    \r\n     - amount of cards you want to remove.\r\n    \r\n     \n**Returns:**   void\r\n    "},"RemoveCardFromDeck":{"name":"RemoveCardFromDeck","type":"function","returns":"void","doc":"void **RemoveCardFromDeck**(int, int) \n\n\r\n     \n**Brief:**   Remove a card from deck by index.\r\n    \r\n     \n\n**Parameters:**\r\n      \r\n      - player you want to use.\r\n    \r\n     - index of the card you want to remove.\r\n    \r\n     \n**Returns:**   void\r\n    "},"RemoveCardFromDeckByName":{"name":"RemoveCardFromDeckByName","type":"function","returns":"void","doc":"void **RemoveCardFromDeckByName**(int, string) \n\n\r\n     \n**Brief:**   Remove a card from deck by name.\r\n    \r\n     \n\n**Parameters:**\r\n      \r\n      - player you want to use.\r\n    \r\n     - name of the card you want to remove.\r\n    \r\n     \n**Returns:**   void\r\n    "},"DrawCardFromDeck":{"name":"DrawCardFromDeck","type":"function","returns":"void","doc":"void **DrawCardFromDeck**(int, int) \n\n\r\n      \n**Brief:**   Draw cards from deck.\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - player you want to use.\r\n     \r\n      - amount of cards you want to draw.\r\n     \r\n      \n**Returns:**   void\r\n     "},"DrawNameCardFromDeck":{"name":"DrawNameCardFromDeck","type":"function","returns":"void","doc":"void **DrawNameCardFromDeck**(int, int, string) \n\n\r\n      \n**Brief:**   Draw cards from deck by name.\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - player you want to use.\r\n     \r\n      - amount of cards you want to draw.\r\n     \r\n      - name of the card.\r\n     \r\n      \n**Returns:**   void\r\n     "},"GetMonster":{"name":"GetMonster","type":"function","returns":"MonsterCard*","doc":"MonsterCard* **GetMonster**() \n\n\r\n     \n**Brief:**   Gets the current monster the players are facing\r\n    \r\n     \n\n**Parameters:**\r\n      \r\n      - Card you want to use.\r\n    \r\n     \n**Returns:**   Card\r\n    "},"GetMonsterTrait":{"name":"GetMonsterTrait","type":"function","returns":"int","doc":"int **GetMonsterTrait**(MonsterCard*) \n\n\r\n     \n**Brief:**   Gets monsterTrait of the monster\r\n    \r\n     \n\n**Parameters:**\r\n      \r\n      - MonsterCard you want to get it from\r\n    \r\n     \n**Returns:**   int\r\n    "},"GetCardMaxHealth":{"name":"GetCardMaxHealth","type":"function","returns":"int","doc":"int **GetCardMaxHealth**(MonsterCard*) \n\n\r\n      \n**Brief:**   Gets maXhealth of a card\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - Card you want to use.\r\n     \r\n      \n**Returns:**   int\r\n     "},"GetCardHealth":{"name":"GetCardHealth","type":"function","returns":"int","doc":"int **GetCardHealth**(MonsterCard*) \n\n\r\n      \n**Brief:**   Gets health of a card\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - Card you want to use.\r\n     \r\n      \n**Returns:**   int\r\n     "},"SetCardHealth":{"name":"SetCardHealth","type":"function","returns":"void","doc":"void **SetCardHealth**(MonsterCard*, int) \n\n\r\n      \n**Brief:**   Sets health of a card\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - Card you want to use.\r\n     \r\n      - New health of a card.\r\n     \r\n      \n**Returns:**   void\r\n     "},"AddCardHealth":{"name":"AddCardHealth","type":"function","returns":"void","doc":"void **AddCardHealth**(MonsterCard*, int) \n\n\r\n      \n**Brief:**   Add health to a card.\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - Card you want to use.\r\n     \r\n      - Amount of health that will be added to a card.\r\n     \r\n      \n**Returns:**   void\r\n     "},"StealCardHealth":{"name":"StealCardHealth","type":"function","returns":"void","doc":"void **StealCardHealth**(MonsterCard*, Hero*, int) \n\n\r\n      \n**Brief:**   Steal health from a card and give it to a hero.\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - Card you want to use.\r\n     \r\n      - Hero that gets the Health.\r\n     \r\n      - Amount of health that will be stolen.\r\n     \r\n      \n**Returns:**   void\r\n     "},"GetCardArmor":{"name":"GetCardArmor","type":"function","returns":"int","doc":"int **GetCardArmor**(MonsterCard*) \n\n\r\n      \n**Brief:**   Gets health of a card\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - Card you want to use.\r\n     \r\n      \n**Returns:**   int\r\n     "},"SetCardArmor":{"name":"SetCardArmor","type":"function","returns":"void","doc":"void **SetCardArmor**(MonsterCard*, int) \n\n\r\n      \n**Brief:**   Sets health of a card\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - Card you want to use.\r\n     \r\n      - New health of a card.\r\n     \r\n      \n**Returns:**   void\r\n     "},"AddCardArmor":{"name":"AddCardArmor","type":"function","returns":"void","doc":"void **AddCardArmor**(MonsterCard*, int) \n\n\r\n      \n**Brief:**   Add health to a card.\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - Card you want to use.\r\n     \r\n      - Amount of health that will be added to a card.\r\n     \r\n      \n**Returns:**   void\r\n     "},"StealCardArmor":{"name":"StealCardArmor","type":"function","returns":"void","doc":"void **StealCardArmor**(MonsterCard*, Hero*, int) \n\n\r\n      \n**Brief:**   Steal health from a card and give it to a hero.\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - Card you want to use.\r\n     \r\n      - Hero that gets the Health.\r\n     \r\n      - Amount of health that will be stolen.\r\n     \r\n      \n**Returns:**   void\r\n     "},"GetCardReward":{"name":"GetCardReward","type":"function","returns":"Reward*","doc":"Reward* **GetCardReward**(MonsterCard*) \n\n\r\n      \n**Brief:**   Gets the reward of a card.\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - Card you want to use.\r\n     \r\n      \n**Returns:**   Reward\r\n     "},"HasCard":{"name":"HasCard","type":"function","returns":"bool","doc":"bool **HasCard**(Card*, Deck) \n\n\r\n      \n**Brief:**   Checks if the deck has a card.\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - Card you want to use.\r\n     \r\n      - Deck you want to use.\r\n     \r\n      \n**Returns:**   bool\r\n     "},"GetCard":{"name":"GetCard","type":"function","returns":"Card*","doc":"Card* **GetCard**(int) \n\n\r\n      \n**Brief:**   Gets a card from a deck and removes it.\r\n     \r\n      \n\n**Parameters:**\r\n      \r\n      - index of the card you want to get.\r\n     \r\n      - Deck you want to use.\r\n     \r\n      \n**Returns:**   Card\r\n     "}}